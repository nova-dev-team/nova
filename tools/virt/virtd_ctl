#!/usr/bin/ruby

def print_help
  puts <<HELP_DOC
usage: virtd_ctl {start|stop|restart} <working_dir>
HELP_DOC
end

# check if has correct cmdline params
if ARGV.length < 2
  print_help
  exit
end

def do_start
  puts "[*] starting virtd..."
  system "#{File.dirname __FILE__}/virtd #{ARGV[1]}"
end

def do_stop
  puts "[*] stopping virtd..."
  pid_file = File.join ARGV[1], "virtd.pid"
  if File.exists? pid_file
  # try to kill possibly running virtd process
    File.open(pid_file, "r") do |f|
      pid = f.read.to_i
      begin
        Process.kill 9, pid
        puts "virtd killed"
      rescue
      end
    end
    File.delete pid_file  # delete the pid file
  end

  sock_file = File.join ARGV[1], "virtd.sock"
  if File.exists? sock_file
    File.delete sock_file # delete the sock file
  end
end

case ARGV[0]
when "start"
  do_start
when "stop"
  do_stop
when "restart"
  do_stop
  do_start
else
  print_help
end

