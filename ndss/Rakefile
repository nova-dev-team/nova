# Helper Rakefile for ndss project
# Author: Santa Zhang


desc "Report status"
task "report" do
  puts "TODO report status"
end

desc "Check coding style"
task "checkstyle" do
  puts "TODO check coding style"
end

# a helper function, generates obj file list for make file
def obj_targets_from folder
  targets = []
  Dir.entries(folder).each do |e|
    if e =~ /\.c$/
      fn = e[0..-3]
      targets << "obj/#{folder}_#{fn}.obj"
    end
  end
  return targets
end

def hfile_full_path hfile
  # find .h file in "xdk" & "core"
  Dir.entries("xdk").each do |e|
    return "xdk/#{hfile}" if hfile == e
  end

  Dir.entries("core").each do |e|
    return "core/#{hfile}" if hfile == e
  end
end

def depend_hfiles src_file
  hfiles = []
  File.open(src_file, "r") do |f|
    f.each_line do |line|
      line = line.strip
      if line =~ /^#include \"/
        hfile = line[10..-2]
        puts src_file + " depends on " + (hfile_full_path hfile)
        hfiles << (hfile_full_path hfile)
      end
    end
  end
  return hfiles
end

def obj_targets_build_rules_from folder
  rules = ""
  (obj_targets_from folder).collect do |obj|
    fn = File.basename obj
    fn = fn[(folder.length + 1)..-5] + ".c" # removes "$(folder)_" prefix & ".obj" postfix, then add ".c" post fix
    rules += "#{obj}: #{folder}/#{fn} #{(depend_hfiles "#{folder}/#{fn}").collect {|f| f + " "}}\n"
    rules += "\t$(CC) $(CFLAGS) -c #{folder}/#{fn} -o #{obj}\n\n"
  end
  return rules
end


desc "Generate Makefile & include files"
task "gen" do
  # gen make file
  File.open("Makefile", "w") do |mf|
    mf.write <<MF_EOF
# WARNING! This file is automatically generated by "rake gen".
# WARNING! Any modification to it would be lost after another "rake gen" operation!

# Automatically generated at #{Time.now}

CC=gcc
CFLAGS=-Wall -Ixdk -Icore

all: prepare ndss

prepare: bin obj

bin:
	mkdir -p bin

obj:
	mkdir -p obj

xdk: obj/libxdk.a

obj/libxdk.a: #{(obj_targets_from "xdk").collect {|obj| obj + " "}}
	ar cq obj/libxdk.a $^
	ranlib obj/libxdk.a

#{obj_targets_build_rules_from "xdk"}

ndss: bin/ndss

bin/ndss: obj/libxdk.a #{(obj_targets_from "core").collect {|obj| obj + " "}}
	$(CC) $(CFLAGS) obj/libxdk.a #{(obj_targets_from "core").collect {|obj| obj + " "}} -o bin/ndss

#{obj_targets_build_rules_from "core"}

test: prepare ndss xdk

clean:
	rm -rf bin
	rm -rf obj

MF_EOF
  end

  # gen include files
  `mkdir -p include`
  File.open("include/README", "w") do |f|
    f.write <<INCLUDE_README
The .h files in this folder is intended for development using ndss library. Core
component of ndss SHOULD NOT use any of them!

All files in this folder is automatically generated by "rake gen". Any modification
to these files would be lost after another "rake gen" operation!

Automatically generated at #{Time.now}
INCLUDE_README
  end

  File.open("include/xdk.h", "w") do |f|
    include_list = ""

    Dir.entries("xdk").each do |e|
      # NOTE could blacklist unwanted .h files
      include_list += "#include \"../xdk/#{e}\"\n" if e =~ /\.h$/
    end

    f.write <<INCLUDE_XDK
// WARNING! This file is automatically generated by "rake gen".
// WARNING! Any modification to it would be lost after another "rake gen" operation!

// Automatically generated at #{Time.now}

#ifndef XDK_H_
#define XDK_H_

#{include_list}
#endif
INCLUDE_XDK
  end

  File.open("include/ndss.h", "w") do |f|
    include_list = ""

    Dir.entries("core").each do |e|
      # NOTE could blacklist unwanted .h files
      include_list += "#include \"../core/#{e}\"\n" if e =~ /\.h$/
    end

    f.write <<INCLUDE_NDSS
// WARNING! This file is automatically generated by "rake gen".
// WARNING! Any modification to it would be lost after another "rake gen" operation!

// Automatically generated at #{Time.now}

#ifndef NDSS_H_
#define NDSS_H_

#{include_list}
#endif
INCLUDE_NDSS
  end

end


task "default" do
  puts "Run 'rake -T' to get list of functions"
  puts "Run 'rake gen' to generate Makefile"
end
