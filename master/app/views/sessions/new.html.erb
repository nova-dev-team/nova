<html>
<head>

<title>Nova platform: Welcome!</title>

<link href="/stylesheets/prototype_window/default.css" rel="stylesheet" type="text/css" />
<link href="/stylesheets/prototype_window/mac_os_x.css" rel="stylesheet" type="text/css" />
<link href="/stylesheets/custom_buttons/custom_buttons.css" rel="stylesheet" type="text/css" />
<link href="/stylesheets/iphone_checkbox/style.css" rel="stylesheet" type="text/css" />


<script type="text/javascript" src="/javascripts/prototype.js"> </script>
<script type="text/javascript" src="/javascripts/effects.js"> </script>
<script type="text/javascript" src="/javascripts/iphone_checkbox/iphone_checkbox.js"> </script>
<script type="text/javascript" src="/javascripts/prototype_window/window.js"> </script>
<script type="text/javascript" src="/javascripts/prototype_window/window_effects.js"> </script>


<%= growl4rails_includes %>

<style type="text/css" media="screen">

body {
  margin: 0;
  margin-bottom: 25px;
  padding: 0;
  background-color: #ddeeee;
  font-family: "Lucida Grande", "Bitstream Vera Sans", "Verdana";
  font-size: 13px;
  color: #333;
  overflow: hidden;
}

input, select, textarea {
	margin: 5px 0;
	padding: 5px;
	color: #6A6969;
	border-width: 1px;
	border-style: solid;
  border-color: #D4D4D4 #EBEBEB #EBEBEB #D4D4D4; 	
	font: 11px 'Lucida Grande', Verdana, Helvetica, sans-serif;
  height: 18pt;
}

input {
  width: 100pt;
}

#login_panel_text {
	font: 14px 'Lucida Grande', Verdana, Helvetica, sans-serif;
}


h1 {
  font-size: 28px;
  color: #000;
}

a {
  color: #ddeeee
}

a:hover {
  background-color: #6688bb;
}

.ie_warning_style {
  font-family: "Lucida Grande", "Bitstream Vera Sans", "Verdana";
  font-size: 13px;
}

.ie_warning_style_ahref {
  color: #667788
}

.ie_warning_style_ahref:hover {
  color: white
}

/* NOTE IE has problems rendering the border, since its width is included in the div's width */
/* I have to use some tricks to fix this */
/* ref: http://www.webcredible.co.uk/user-friendly-resources/css/internet-explorer.shtml, 090630 */

#page {
  position: absolute;
  background-image: url(/images/bg.jpg);
  width: 780px; /* IE fix. Original value was 750. 780 = 750 + 2 * 15 (border width) */
  height: 530px; /* IE fix. Original value was 500. 530 = 500 + 2 * 15 (border width) */
  border: 15px white solid;
}

html>body #page {
  width: 750px; /* IE fix */
  height: 500px; /* IE fix */
}

#login_panel {
  position: relative;
  left: -20px;
  top: +20px;
}

#logo_holder {
  position: absolute;
}

#bottom_line {
  position: absolute;
  height: 30px;
  color: #ddeeee;
}

.wait_for_input {
  color: gray;
}

.wrong_input {
  background-color: #ff4444;
}

</style>
<script type="text/javascript">

  function do_message(type, title, msg) {
    if (Prototype.Browser.IE) {
      alert(title + ":\n" + msg);
    } else {
      var img = "";
      if (type == "ok") {
        img = "/images/ok.png";
      } else if (type == "error") {
        img = "/images/error.png";
      }
      Growl4Rails.showGrowl({
        image_path: img,
        title: title,
        message: msg
      });
    }
  }

  function do_login() {
    var login_field = $('login');
    var password_field = $('password');
    
    if (login_field.hasClassName("wait_for_input")) {
      login_field.addClassName("wrong_input");
      do_message("error", "Not enough information", "Please provide your user ID!");
      return;
    }
    
    if (password_field.hasClassName("wait_for_input")) {
      password_field.addClassName("wrong_input");
      do_message("error", "Not enough information", "Please provide your password!");
      return;
    }
    
    new Ajax.Request('/sessions/create', {
      method: 'post',
      parameters: {
        login: login_field.value,
        password: password_field.value
      },
      onSuccess: function(transport){
        var json = transport.responseText.evalJSON(true);
        if (json.success) {
          window.location = '/';
        } else {
          do_message("error", "Login failed", json.message);
        }
      },
      onFailure: function() {
        do_message("error", "Connection failed", "Please check your network connection!");
      }
    });
  }

  function do_signup() {

    var logo = $("logo_holder");
    
    if ($("signup_window") == null) {
      var win = new Window({
        id: "signup_window",
        className: "mac_os_x",
        blurClassName: "blur_os_x",
        title: "Sign up form",
        width: 440,
        height: 350,
        top: parseInt(logo.getStyle("top")) + 40,
        left: parseInt(logo.getStyle("left")) + 220,
        minimizable: false,
        maximizable: false,
        resizable: false,
        destroyOnClose: true
      });

      /* IE layout bug fix */
      if (Prototype.Browser.IE) {
        win.top += 15;
      }

      win.getContent().update("\
<p align='center'>\
  <table>\
    <tr>\
      <td>User ID *</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='text' id='signup_user_id' /></td>\
    </tr>\
    <tr>\
      <td>Password *</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='password' id='signup_password' /></td>\
    </tr>\
    <tr>\
      <td>Confirm Password *</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='password' id='signup_password_confirm' /></td>\
    </tr>\
    <tr>\
      <td>Email Address *</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='text' id='signup_email' /></td>\
    </tr>\
    <tr>\
      <td>Full Name</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='text' id='signup_fullname' /></td>\
    </tr>\
<!--    <tr>\
      <td><img src='/misc/verification_image.png' /> *</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='text' id='signup_verification' /></td>\
    </tr>\
-->\
    <tr>\
      <td>Sign up as administrator?</td>\
      <td><img src='/images/spacer.gif' width=40 height=40></td>\
      <td><input type='checkbox' id='signup_admin' /></td>\
    </tr>\
    <tr>\
      <td colspan=3>\
        <font style='font-size:10px'>Fields with * is required<br />\
        Allowed user id characters include: a-z, 0-9, '.' and '_' (must start with a-z)</font>\
      </td>\
    </tr>\
  </table>\
  </p>\
  <p align='center'>\
  <button id='btn_send_signup' type='button' class='btn' onclick='send_signup()'><span><span>Sign up!</span></span></button>\
  </p>\
      ");
      
    new iPhoneStyle('input[type=checkbox]', {
      rightside: 46, // display bug fix
      checkedLabel: "YES",  // default is "ON"
      uncheckedLabel: "NO"  // default is "OFF"
    });
      win.show();
    }
    
    decorate_field($('signup_user_id'), "3~20 characters", "wait_for_input");
    decorate_field($('signup_email'), "6~40 characters", "wait_for_input");
    decorate_field($('signup_fullname'), "<= 40 characters", "wait_for_input");
//    decorate_field($('signup_verification'), "what's in the picture?", "wait_for_input");
    
    var signup_password = $('signup_password');
    var signup_password_confirm = $('signup_password_confirm');
    
    if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
      signup_password.setAttribute("type", "text");
      signup_password_confirm.setAttribute("type", "text");
      
      signup_password.value = "6~40 characters";
      signup_password.addClassName("wait_for_input");
      
      signup_password_confirm.value = "same as above";
      signup_password_confirm.addClassName("wait_for_input");
    }
    
    signup_password.observe('focus', function() {
      if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
        signup_password.setAttribute("type", "password");
      }
      if (signup_password.hasClassName("wait_for_input")) {
        signup_password.value = ""; // clear default data, wait for user's input
      }
    });
    
    signup_password.observe('keypress', function(e) {
      if (signup_password.value != "" || e.charCode != 0) {
        signup_password.removeClassName("wait_for_input");
        
        signup_password.removeClassName("wrong_input");
        signup_password_confirm.removeClassName("wrong_input");
      }
    });
    
    signup_password.observe('blur', function() {
      if (signup_password.value == "") {
        if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
          signup_password.setAttribute("type", "text");
          signup_password.value = "6~40 characters";
          signup_password.addClassName("wait_for_input");
        }
      }
    });
    
    
    
    signup_password_confirm.observe('focus', function() {
      if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
        signup_password_confirm.setAttribute("type", "password");
      }
      if (signup_password_confirm.hasClassName("wait_for_input")) {
        signup_password_confirm.value = ""; // clear default data, wait for user's input
      }
    });
    
    signup_password_confirm.observe('keypress', function(e) {
      if (signup_password_confirm.value != "" || e.charCode != 0) {
        signup_password_confirm.removeClassName("wait_for_input");
        
        signup_password.removeClassName("wrong_input");
        signup_password_confirm.removeClassName("wrong_input");
      }
    });
    
    signup_password_confirm.observe('blur', function() {
      if (signup_password_confirm.value == "") {
        if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
          signup_password_confirm.setAttribute("type", "text");
          signup_password_confirm.value = "same as above";
          signup_password_confirm.addClassName("wait_for_input");
        }
      }
    });
    
  }
  
  function getWindowWidth() {
    return window.innerWidth || (window.document.documentElement.clientWidth || window.document.body.clientWidth);
  }
  
  function getWindowHeight() {
    return window.innerHeight || (window.document.documentElement.clientHeight || window.document.body.clientHeight);
  }
  
  
  /* a hack to fix resizing bug 090630 */
  var _page_width;
  var _page_height;
  
  // put the login panel to the center
  function do_layout() {  

    var page_border_width = 15;

    var panel = $("page");


    /* a hack to fix resizing bug 090630 */    
    var _resizing_fix_090630 = false;
    
    if (_page_width == null) {
      _page_width = panel.getWidth();
    }
    if (_page_height == null) {
      _page_height = panel.getHeight();
    }
    if (_page_width != panel.getWidth() || _page_height != panel.getHeight()) {
      _resizing_fix_090630 = true;
    }
    
    var left_origin = (getWindowWidth() - panel.getWidth()) / 2 - page_border_width;
    var top_origin = (getWindowHeight() - panel.getHeight()) / 2 - page_border_width;

    // FIX on 090909: when browser window is too small, don't do center layout
    if (left_origin < 0 || top_origin < 0) {
      left_origin = Math.max(0, left_origin);
      top_origin = Math.max(0, top_origin);
      // TODO show scrollbars
    }
    
    if (_resizing_fix_090630) {
      left_origin += page_border_width;
      top_origin += page_border_width;
    }
    
    panel.setStyle("left:" + left_origin);
    panel.setStyle("top:" + top_origin);
    var logo = $("logo_holder");
    logo.setStyle("left:" + (left_origin + 50));
    logo.setStyle("top:" + (top_origin + 30));
    
    var bottom = $("bottom_line");
    var bottom_margin = 10;
    
    if (_resizing_fix_090630) {
      bottom.setStyle("width:" + (panel.getWidth() - (bottom_margin + page_border_width) * 2));
      bottom.setStyle("left:" + (left_origin + page_border_width + bottom_margin));
      bottom.setStyle("top:" + (top_origin + panel.getHeight() + page_border_width - bottom.getHeight() - 2 * page_border_width));
    } else {
      bottom.setStyle("width:" + (panel.getWidth() - bottom_margin * 2));
      bottom.setStyle("left:" + (left_origin + page_border_width + bottom_margin));
      bottom.setStyle("top:" + (top_origin + panel.getHeight() + page_border_width - bottom.getHeight()));
    }
  }
  
  function decorate_field(field, default_text, default_class) {
    field.value = default_text;
    field.addClassName(default_class);
    
    field.observe('focus', function() {
      if (field.hasClassName(default_class)) {
        field.value = ""; // clear default data, wait for user's input
      }
    });
    
    // field.onkeydown = funciton(e) {blah-blah-blah-} does not work on IE, so I have to use prototype.observe
    field.observe('keypress', function(e) {
      if (field.value != "" || e.charCode != 0) {
        field.removeClassName(default_class);
        field.removeClassName("wrong_input");
      }
    });
    
    // on lost focus, check if has user input
    field.observe('blur', function() {
      if (field.value == "") {
        field.value = default_text;
        field.addClassName(default_class);
      }
    });
  }
  
  function validate_signup() {
    
    var signup_user_id = $("signup_user_id");
    var signup_password = $("signup_password");
    var signup_password_confirm = $("signup_password_confirm");
    var signup_email = $("signup_email");
    var signup_verification = $("signup_verification");
    var signup_fullname = $("signup_fullname");
    
    function signup_error(msg) {
      do_message("error", "Incorrect signup information", msg);
    }
    
    if (signup_user_id.hasClassName("wait_for_input")) {
      signup_error("Please provide a user ID");
      signup_user_id.addClassName("wrong_input");
      return false;
    }
    
    if (signup_user_id.value == "" || signup_user_id.value.length < 3 || signup_user_id.value.length > 40) {
      signup_error("User ID should have 3~40 characters");
      signup_user_id.addClassName("wrong_input");
      return false;
    }
    
    var user_id_regex = /^([a-z])+([a-z0-9_\.])*$/;
    if (user_id_regex.test(signup_user_id.value) == false) {
      signup_error("User ID should only contain a-z, 0-9, '.' and '_'. And it must start with a-z.");
      signup_user_id.addClassName("wrong_input");
      return false;
    }
    
    if (signup_password.hasClassName("wait_for_input")) {
      signup_error("Please provide a password");
      signup_password.addClassName("wrong_input");
      return false;
    }
    
    if (signup_password.value == "" || signup_password.value.length < 6 || signup_password.value.length > 40) {
      signup_error("Password should have 6~40 characters");
      signup_password.addClassName("wrong_input");
      return false;
    }
    
    if (signup_password.value != signup_password_confirm.value) {
      signup_error("Your password does not match");
      signup_password.addClassName("wrong_input");
      signup_password_confirm.addClassName("wrong_input");
      return false;
    }
    
    if (signup_fullname.value != "" && signup_fullname.value.length > 100) {
      signup_error("Full name cannot exceed 100 characters");
      signup_fullname.addClassName("wrong_input");
      return false;
    }
/*
    if (signup_verification.hasClassName("wait_for_input")) {
      signup_error("Don't forget the verification code");
      signup_verification.addClassName("wrong_input");
      return false;
    }
*/
    if (signup_email.hasClassName("wait_for_input")) {
      signup_error("Please provide your email address");
      signup_email.addClassName("wrong_input");
      return false;
    }
    
    if (signup_email.value == "" || signup_email.value.length < 6 || signup_email.value.length > 40) {
      signup_error("Email address should have 6~40 characters");
      signup_email.addClassName("wrong_input");
      return false;
    }
    
    var email_regex = /^([A-Za-z0-9\-\.])+\@([A-Za-z0-9\-\.])+\.([A-Za-z]{2,4})$/;
    if(email_regex.test(signup_email.value) == false) {
      signup_error("Invalid email address");
      signup_email.addClassName("wrong_input");
      return false;
    }
    
    return true;
  }
  
  function send_signup() {
    if (validate_signup() == false)
      return;
    
    // prevent sending twice when user double-click "sign up" button
    $("btn_send_signup").onclick = function() {};

    Windows.close("signup_window");
    
    var signup_user_id = $("signup_user_id");
    var signup_password = $("signup_password");
    var signup_password_confirm = $("signup_password_confirm");
    var signup_email = $("signup_email");
    var signup_verification = $("signup_verification");
    var signup_fullname = $("signup_fullname");
    
    var signup_admin = $("signup_admin");

    var user_group = "user";
    if (signup_admin.checked) {
      user_group = "admin";
    }
    
    new Ajax.Request('/users/create', {
      method: 'post',
      parameters: {
        'login': signup_user_id.value,
        'password': signup_password.value,
        'password_confirmation': signup_password_confirm.value,
        'email': signup_email.value,
        'name': signup_fullname.value,
        'group': user_group
      },
      onSuccess: function(transport){
        var json = transport.responseText.evalJSON(true);
        if (json.success) {
          do_message("ok", "Sign up successful", json.message);
        } else {
          do_message("error", "Sign up failed", json.message);
        }
      },
      onFailure: function() {
        do_message("error", "Connection failed", "Please check your network connection!");
      }
    });
  }
  
  window.onload = function() {
    
    window.onresize = do_layout;
    do_layout();

    
    $("page").show(); // prevents blinking
    $("logo_holder").show();
    $("bottom_line").show();
    
    if (Prototype.Browser.IE) {
      // for IE, layout twice to fix border-drawing bug  
      do_layout();
    }

/*    if (Prototype.Browser.IE) {
      // warning for ie
      Dialog._openDialog($("ie_warning").innerHTML, {
        width: 400,
        id: "ie_warning_win",
        className: "mac_os_x",
        blurClassName: "blur_os_x"
      });
    }
*/
    decorate_field($('login'), "User ID", "wait_for_input");
    
    if (Prototype.Browser.IE == false && Prototype.Browser.Opera == false) {
      // add eye candy for password box
      
      var login_password = $("password");
      login_password.setAttribute("type", "text");
      
      login_password.value = "Password";
      login_password.addClassName("wait_for_input");
      
      login_password.observe('focus', function() {
        login_password.setAttribute("type", "password");
        if (login_password.hasClassName("wait_for_input")) {
          login_password.value = ""; // clear default data, wait for user's input
        }
      });
      
      login_password.observe('keypress', function(e) {
        if (login_password.value != "" || e.charCode != 0) {
          login_password.removeClassName("wait_for_input");
          login_password.removeClassName("wrong_input");
        }
      });
      
      login_password.observe('blur', function() {
        if (login_password.value == "") {
          login_password.setAttribute("type", "text");
          login_password.value = "Password";
          login_password.addClassName("wait_for_input");
        }
      });
      
    } else {
      decorate_field($('password'), "password", "wait_for_input");
    }
    
    $('login').observe('keypress', function(e) {
      if (e.keyCode == Event.KEY_RETURN) {
        do_login();
      }
    });
    $('password').observe('keypress', function(e) {
      if (e.keyCode == Event.KEY_RETURN) {
        do_login();
      }
    });
  }
</script>
</head>
<body scroll="no">
<!-- div# page set to display:none, and will be shown by javascript. this is intended to reduce flickering -->
<div id="page" style="display: none;">
  
  <div id="login_panel" align='right'>
  <table>
  <tr>
  <td>
    <div>
    <%= text_field_tag 'login', @login %>
    <%= password_field_tag 'password', nil %>
    </div>
  </td>
  <td>
    <div id="login_panel_text">
<%
# <p><%= label_tag 'remember_me', 'Remember me' % >
# <%= check_box_tag 'remember_me', '1', @remember_me % >
%>
    &nbsp;&nbsp;
    <a href='#' onclick="do_login(); return false">Login</a>
    <a href="#" onclick="do_signup(); return false">Sign Up</a>
    </div>
  </td>
  </tr>
  </table>
  </div>

<%
#  <%= link_to_prototype_dialog("show a confirm win", "say hi", 'alert', {:title => "Demo win", :className => "mac_os_x", :width => 340, :height => 300}) % >
%>
</div>

<div id="logo_holder" style="display: none;">
  <img src="/images/logo-medium.png" />
</div>

<div id="bottom_line" style="display: none;">
<div style="position: absolute">&copy;2010 <a href="mailto:santa1987@gmail.com">Santa Zhang</a> &amp; <a href="mailto:herokuankuan@gmail.com">Huang Gang</a></div>
<div align="right" >
<!--
  <a href="/docs/index.html" onclick="alert('TODO')">Documentation</a> &nbsp;
-->
</div>
</div>

<div id="ie_warning" style="display: none;">
<p align="center" class="ie_warning_style">
Warning: IE browser is not fully supported!<br />
We suggest the following browsers:<br />
  <a class="ie_warning_style_ahref" href="http://firefox.com">Firefox</a>,
  <a class="ie_warning_style_ahref" href="http://google.com/chrome">Google Chrome</a>,
  <a class="ie_warning_style_ahref" href="http://apple.com/safari">Safari</a>,
  and <a class="ie_warning_style_ahref" href="http://opera.com">Opera</a>.
<br />
<button type="button" class="btn" onclick="Dialog.okCallback(); return false"><span><span>Close warning</span></span></button>
</p>
</div>


</body></html>
