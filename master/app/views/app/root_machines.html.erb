<%
  @nav_bar_current = "Machines"
  @layout_resize_callback = "do_layout"
%>


<%
  ###################################################################################
%>



<% content_for :layout_style_and_scripts do %>


<link href="/stylesheets/table-style/styles.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="/javascripts/fg-menu/fg.menu.js"></script>
<script type="text/javascript" src="/javascripts/jquery.blockUI.js"></script>
<link href="/stylesheets/fg-menu/fg.menu.css" rel="stylesheet" type="text/css" />

<!-- styles for fg menu -->
<style type="text/css">


.fg-menu-container{ z-index:100;}


.hidden { position:absolute; top:0; left:-9999px; width:1px; height:1px; overflow:hidden; }

.fg-button { clear:left; margin:0 4px 40px 0px; padding: .4em 1em; text-decoration:none !important; cursor:pointer; position: relative; text-align: center; zoom: 1; }
.fg-button .ui-icon { position: absolute; top: 50%; margin-top: -8px; left: 50%; margin-left: -8px; }
a.fg-button { float:left;  }
button.fg-button { width:auto; overflow:visible; } /* removes extra button width in IE */

.fg-button-icon-left { padding-left: 2.1em; }
.fg-button-icon-right { padding-right: 2.1em; }
.fg-button-icon-left .ui-icon { right: auto; left: .2em; margin-left: 0; }
.fg-button-icon-right .ui-icon { left: auto; right: .2em; margin-left: 0; }
.fg-button-icon-solo { display:block; width:8px; text-indent: -9999px; }	 /* solo icon buttons must have block properties for the text-indent to work */	

.fg-button.ui-state-loading .ui-icon { background: url(/images/spinner_bar.gif) no-repeat 0 0; }
</style>

<!-- style exceptions for IE 6 -->
<!--[if IE 6]>
<style type="text/css">
	.fg-menu-ipod .fg-menu li { width: 95%; }
	.fg-menu-ipod .ui-widget-content { border:0; }
</style>
<![endif]-->

<style type="text/css" media="screen">

a.left_nav_button {
  display: block;
  height: 35;
  color: black;
  overflow: hidden;
  padding-left: 20px;
  line-height: 35px;
  text-decoration: none;
}

a.left_nav_button:hover {
  background-color: #bbaabb;
}

a.left_nav_current {
  color: #ddeeee;
  font-weight: bold;
  background-image: url(/images/left-nav-btn-bg.gif);
}

.machines_holder {
/* width & height set by js in do_layout */
  border-top: 1px solid #BBB;
  overflow: auto;
  overflow-x: hidden;
}

#left_nav_bottom {
  height: 30px;
  z-index: 100;
  border-top: 1px solid #BBB;
}

</style>


<script type="text/javascript">

  function getWindowHeight() {
    return window.innerHeight || (window.document.documentElement.clientHeight || window.document.body.clientHeight);
  }

  function do_layout() {
    $(".machines_holder").height($("#layout_left_pane").height() - 2 * $(".left_nav_button").height() - $("#left_nav_bottom").height());
    $(".machines_holder").css("width", $("#layout_left_pane").width());
    $(".left_nav_button").css("width", $("#layout_left_pane").width());
    $("#left_nav_bottom").css("width", $("#layout_left_pane").width());
  };
  
  window.onresize = do_layout;
  
  $(document).ready(function(){
    
    // override default left pane overflow settings
    $("#layout_left_pane").css("overflow", "hidden");
    
    // by default. show physical machines
    list_physical_machines();
    
    
    $('#left_nav_bar_bottom_add_btn').menu({ 
			content: $('#left_nav_add_btn_menu').html(), // grab content from this page
			showSpeed: 400,
			positionOpts: {
			  directionV: "up",
			  posX: 'left',
			  posY: 'bottom',
			  offsetX: 0,
			  offsetY: 0
			}
		});
		
    
    $('.fg-button').hover(
  		function(){ $(this).removeClass('ui-state-default').addClass('ui-state-focus'); },
  		function(){ $(this).removeClass('ui-state-focus').addClass('ui-state-default'); }
  	);

    $("#add_vcluster_dialog").tabs();

  });
  
  
  function list_virtual_clusters() {
    $("#left_nav_btn_list_pmachine").removeClass("left_nav_current");
    $("#left_nav_btn_list_vcluster").addClass("left_nav_current");
    $("#vcluster_list_holder").show();
    $("#pmachine_list_holder").hide();
    $("#pmachines_overview").hide();
    $("#pm_detail_holder").hide();
    
    do_layout();
    refresh_vclusters();
  }
  
  function list_physical_machines() {
    $("#left_nav_btn_list_vcluster").removeClass("left_nav_current");
    $("#left_nav_btn_list_pmachine").addClass("left_nav_current");
    $("#pmachine_list_holder").show();
    $("#vcluster_list_holder").hide();
    $("#pmachines_overview").show();
    $("#pm_detail_holder").hide();

    do_layout();
    refresh_pmachines(); 
  }

  function pm_detail(pm_addr) {
    // pm_addr 192.168.0.104:4000 will be replaced to 192_168_0_104-4000
    $("#pmachines_overview").hide();

    $("#layout_center_pane").block({message: "Loading..."});
    $.ajax({
      type: "POST",
      url: "/pmachines/show",
      data: {
        addr: pm_addr
      },
      dataType: "json",
      error: function(e) {
        show_message("Failed to download detailed information of this pmachine! Check your network connection!");
        $("#layout_center_pane").unblock();
      },
      success: function(result) {
        var html_str = "";
        html_str += "ID: " + result.id + "<br>";
        html_str += "Address: " + result.addr + "<br>";
        html_str += "Retired: " + result.retired + "<br>";
        html_str += "VNC range: " + result.vnc_first + "-" + result.vnc_last + "<br>";

        html_str += "<hr>";
        html_str += "<table class='styled_table' cellspacing=0>";
        html_str += "<tr><th scope='col'>ID</th><th scope='col'>CPU count</th><th scope='col'>Memory size</th><th scope='col'>HDA</th><th scope='col'>Arch</th><th scope='col'>Status</th></tr>";
        for (i = 0; i < result.vm_info.length; i++) {
          vm = result.vm_info[i];
          html_str += "<tr>";
          html_str += "<th scope='row' class='" + ((i % 2 == 0) ? "specalt" : "spec") + "'>" + vm.id + "</th>";
          html_str += "<td " + ((i % 2 == 0) ? "class='alt'" : "") + ">" + vm.cpu_count + " CPU" + ((vm.cpu_count > 1) ? "s" : "") + "</td>";
          html_str += "<td " + ((i % 2 == 0) ? "class='alt'" : "") + ">" + vm.mem_size + " MB</td>";
          html_str += "<td " + ((i % 2 == 0) ? "class='alt'" : "") + ">" + vm.hda + "</td>";
          html_str += "<td " + ((i % 2 == 0) ? "class='alt'" : "") + ">" + vm.arch + "</td>";
          html_str += "<td " + ((i % 2 == 0) ? "class='alt'" : "") + ">" + vm.status + "</td>";
          html_str += "</tr>";
        }
        html_str += "</table>";
        $("#layout_center_pane").unblock();
        $("#pm_detail_holder").html(html_str);
        $("#pm_detail_holder").show();
      }
    });
  }

  function refresh_pmachines() {
    $("#pmachine_list_holder").block({message: "Loading..."});
    $("#layout_center_pane").block({message: "Loading..."});

    $.ajax({
      type: "GET",
      url: "/pmachines",
      dataType: "json",
      error: function(e) {
        show_message("Failed to download list of pmachines! Check your network connection!");
        $("#pmachine_list_holder").unblock();
        $("#layout_center_pane").unblock();
      },
      success: function(result) {
        var list_html = "";
        for (i = 0; i < result.length; i++) {
          pm = result[i];
          list_html += "<a class='dark_link' href='#' onclick='pm_detail(\"" + pm.addr + "\")'>" + pm.addr + "</a>, vnc=" + pm.vnc_first + "-" + pm.vnc_last + "<br>";
        }
        $("#pmachine_list_holder").html(list_html);
        $("#pmachine_list_holder").unblock();

        var iptable_cmd = "";
        <%
          master_internet_ip = (Setting.find_by_key "master_internet_ip").value
          master_intranet_ip = (Setting.find_by_key "master_intranet_ip").value

          def not_blank? value
            value and value != ""
          end
        %>
        <% if not_blank? master_internet_ip and not_blank? master_intranet_ip %>
        for (i = 0; i < result.length; i++) {
          pm = result[i];
          pm.ip = (pm.addr.split(":"))[0];
          pm.port = (pm.addr.split(":"))[1];
          if (pm.ip == "<%= master_internet_ip %>" || pm.ip == "<%= master_intranet_ip %>")
            continue;
          for (p = pm.vnc_first; p <= pm.vnc_last; p++) {
            iptable_cmd += "iptables -t nat -A PREROUTING -d <%= master_internet_ip %> -p tcp --dport " + p + " -j DNAT --to-destination " + pm.ip +  ":" + p + "\n";
            iptable_cmd += "iptables -t nat -A POSTROUTING -d " + pm.ip + " -p tcp --dport " + p +  " -j SNAT --to <%= master_intranet_ip %>\n";
          }
          iptable_cmd += "\n";
        }
        iptable_cmd += "iptables-save";
        <% else %>
          // master ip not set
          iptable_cmd = "You should set 'master_internet_ip', 'master_intranet_ip' in 'Settings' page.";
        <% end-%>
        $("#iptable_cmd_holder").html(iptable_cmd);
        $("#layout_center_pane").unblock();
      }
    }); 
  }

  function refresh_vclusters() {
    $("#vcluster_list_holder").block({message: "Loading..."});

    $.ajax({
      type: "GET",
      url: "/vclusters",
      dataType: "json",
      error: function(e) {
        show_message("Failed to download list of vclusters! Check your network connection!");
        $("#vcluster_list_holder").unblock();
      },
      success: function(result) {
        var html_str = "";
        for (i = 0; i < result.length; i++) {
          html_str += "id:" + result[i].id + ", name:'" + result[i].name + "'<br>";
        }
        $("#vcluster_list_holder").html(html_str);
        $("#vcluster_list_holder").unblock();
      }
    });
 
  }

  function do_refresh() {
    if ($("#pmachine_list_holder").is(':visible')) {
      refresh_pmachines();
    } else {
      refresh_vclusters();
    }
  }

  // check if a text is valid ip address
  function validate_ip_addr(text) {
    if (text == null || text.length < 7) {
      return false;
    }
    splt = text.split(".");
    if (splt.length != 4) {
      return false;
    }
    for (i = 0; i < splt.length; i++) {
      var seg = splt[i];
      for (j = 0; j < seg.length; j++) {
        ch = seg[j];
        if (ch < '0' || ch > '9') {
          return false;
        }
        val = parseInt(seg);
        if (val < 0 || val > 255)
          return false;
      }
    }
    return true;
  }

  function validate_vnc_range(text) {
    if (text == null || text.length < 3) {
      return false;
    }
    splt = text.split("-");
    if (splt.length != 2) {
      return false;
    }
    for (i = 0; i < text.length; i++) {
      var ch = text[i];
      if (ch == '-')
        continue;
      if (ch < '0' || ch > '9')
        return false;
    }
    return true;
  }

  var new_pmachine_dialog;

  function add_pmachine() {
    if (new_pmachine_dialog == null) {
      new_pmachine_dialog = $("#add_pmachine_dialog").dialog({
        modal: true,
        width: 500,
        height: $.browser.msie ? 570 : 300, // IE has layout problems
        resizable: false,
        draggable: $.browser.msie == false, // IE has layout problems
        hide: "slide",
        show: "slide",
        title: "Add new pmachine",
        buttons: {
          "OK": function(e) {
            var ip_text = $("#new_pmachine_ip").val();
            if (validate_ip_addr(ip_text) == false) {
              $("#new_pmachine_ip").val("INVALID IP ADDRESS!");
              return;
            }

            var vnc_text = $("#new_pmachine_vnc").val();
            if (validate_vnc_range(vnc_text) == false) {
              $("#new_pmachine_vnc").val("INVALID VNC PORTS RANGE");
              return;
            }
            vnc_splt = vnc_text.split("-");

            var port_text = $("#new_pmachine_port").val();
            this_dialog = $(this);
            
            $.ajax({
              type: "POST",
              url: "/pmachines/create",
              data: {
                ip: ip_text,
                port: port_text,
                vnc_first: vnc_splt[0],
                vnc_last: vnc_splt[1]
              },
              dataType: 'json',
              error: function(e) {
                this_dialog.dialog("close");
                show_message("Failed to connect server! Check your network connection!");
              },
              success: function(result) {
                this_dialog.dialog("close");
                if (result.success) {
                  list_physical_machines();
                } else {
                  show_message("Failed to add new pmachine! Server error message => " + result.message);
                }
              }
            });

          },
          "Cancel": function(e) {
            $(this).dialog("close");
          }
        }
      });
    }
    new_pmachine_dialog.dialog("open");
  }

  var new_vcluster_dialog;

  function add_vcluster() {
    if (new_vcluster_dialog == null) {
      new_vcluster_dialog = $("#add_vcluster_dialog").dialog({
        modal: true,
        width: 500,
        height: $.browser.msie ? 720 : 450, // IE has layout problems
        resizable: true,
        draggable: $.browser.msie == false, // IE has layout problems
        hide: "slide",
        show: "slide",
        title: "Add new vcluster",
        buttons: {
          "OK": function(e) {
            this_dialog = $(this);
            // create cluster using wizard
            $.ajax({
              type: "POST",
              url: "/vclusters/create",
              dataType: "json",
              data: {
                size: $("#vcwiz_vcluster_size").val(), 
                name: $("#vcwiz_vcluster_name").val(),
                start_now: true,
                soft_list: "",
                memory_size: $("#vcwiz_memory_size").val(),
                cpu_count: $("#vcwiz_cpu_count").val()
              },
              error: function(e) {
                show_message(e);
                this_dialog.dialog("close");
              },
              success: function(result) {
                this_dialog.dialog("close");
                list_virtual_clusters();
              }
            });
          },
          "Cancel": function(e) {
            $(this).dialog("close");
          }
        }
      });
    }
    new_vcluster_dialog.dialog("open");
  }

  
</script>
  
<% end -%>


<%
  ###################################################################################
%>


<% content_for :layout_left_frame do %>


<a id="left_nav_btn_list_pmachine" class="left_nav_button left_nav_current" href="#" onclick="list_physical_machines()">
  Physical Machines
</a>

<a id="left_nav_btn_list_vcluster" class="left_nav_button" href="#" onclick="list_virtual_clusters()">
  Virtual Clusters
</a>


<div id="pmachine_list_holder" class="machines_holder"></div>
<div id="vcluster_list_holder" class="machines_holder"></div>

<div id="left_nav_bottom">

  <div id="left_nav_add_btn_holder">

    <a tabindex="0" href="#" class="fg-button fg-button-icon-right ui-widget ui-state-default ui-corner-all" id="left_nav_bar_bottom_add_btn"><span class="ui-icon ui-icon-circle-plus"></span>Add</a>
    <div id="left_nav_add_btn_menu" class="hidden">
      <ul>
	      <li><a href="#" onclick="add_pmachine()">Physical Machine</a></li>
        <li><a href="#" onclick="add_vcluster()">Virtual Cluster</a></li>
        <!--
        <li><a href="#">Virtual Machine</a></li>
        -->
      </ul>
    </div>
    <a href="#" class="fg-button ui-widget ui-state-default ui-corner-all" style="position:absolute;left:75" onclick="do_refresh()">Refresh</a>
  </div>

</div>

<% end -%>


<%
  ###################################################################################
%>

<% content_for :layout_center_frame do %>


<div id="pmachines_overview" style="display:none;">
<p align="center">
iptables setting: Ensure the following commands have been executed on master node.<br>
(You might need to run 'iptables -F' first, to forget all old iptables settings.)
<table>
  <tr>
    <td>
      <pre>
        <div id="iptable_cmd_holder" />
      </pre>
    </td>
  </tr>
</table>

<hr>

</p>
</div>

<div id="pm_detail_holder" style="display:none;">
</div>


<div id="add_pmachine_dialog" style="display:none;">
<p align="center">
  <table>
    <tr>
      <td>Pmachine IP</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="new_pmachine_ip" /></td>
    </tr>
    <tr>
      <td>Pmachine port</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="new_pmachine_port" value="3000" /></td>
    </tr>
    <tr>
      <td>VNC ports range</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="new_pmachine_vnc" value="<%= PmachinesHelper::Helper.vnc_recommendation %>"/></td>
    </tr>
  </table>
</p>
</div>

<div id="add_vcluster_dialog" style="display:none;">
  <ul>
    <li><a href="#add_vcluster_tab_wizard">Wizard</a></li>
    <li><a href="#add_vcluster_tab_advanced">Advanced Options</a></li>
  </ul>

  <!-- Vcluster wizard -->
  <div id="add_vcluster_tab_wizard">
  <table>
    <tr>
      <td>Vcluster name</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="vcwiz_vcluster_name" /></td>
    </tr>
    <tr>
      <td>Vcluster size</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="vcwiz_vcluster_size" value="4" /></td>
    </tr>
    <tr>
      <td>System image</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td>
        <select>
          <% Vdisk.all.each do |vdisk| %>
            <option><%= vdisk.display_name %></option>
          <% end-%>
        </select>
      </td>
    </tr>
    <tr>
      <td>Memory size</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="vcwiz_memory_size" value="512"> MB</td>
    </tr>
    <tr>
      <td>CPU count</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td>
        <select id="vcwiz_cpu_count">
          <option>1</option>
          <option>2</option>
          <option>4</option>
        </select>
      </td>
    </tr>
  </table>
  </div>

  <!-- Advanced options -->
  <div id="add_vcluster_tab_advanced">
  <table>
    <tr>
      <td>Advanced</td>
      <td><img src="/images/spacer.gif" width=40 height=40></td>
      <td><input type="text" id="vcadv_vcluster_size" value="TODO"></td>
    </tr>
  </table>
  </div>
</div>


<% end -%>

