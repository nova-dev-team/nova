<%

def spacing size = 8
  return "&nbsp;" * size
end

%>

<% content_for :page do %>

<script type="text/javascript">
$(document).ready(function() {
  system_load_settings(<%= Setting.count %>);
  port_mapping_load();
  load_worker_machines();
  load_software_packages();
  load_vdisk_images();
});
</script>

<center>

<h2>System settings</h2> <a href='#' onclick="system_load_settings(<%= Setting.count %>);">(refresh)</a><p/>

<%
# don't add any thing inside the <div></div>
%>
<div id="system_settings_container"></div>

<p/>
<hr>
<p/>

<h2>Worker machines</h2> <a href='#' onclick="load_worker_machines()">(refresh)</a><p/>

<%
# don't add any thing inside the <div></div>
%>
<div id="worker_machines_container"></div>

Worker IP: <input type="text" id="new_worker_machine_ip" /> <%= spacing 2 %>
VM capacity: <input type="text" id="new_worker_machine_capacity" /> <%= spacing 2 %>
<button type="button" class='btn' onclick='pmachine_add()'><span><span>Add new worker</span></span></button>

<p/>
<hr>
<p/>

<h2>Port mappings</h2> <a href='#' onclick="port_mapping_load()">(refresh)</a><p/>

<%
# don't add any thing inside the <div></div>
%>
<div id="port_mappings_container"></div>
<p/>

Proxy port: <input type="text" id="port_mapping_proxy_port"/> <%= spacing 2 %>
Destination IP: <input type="text" id="port_mapping_ip" /> <%= spacing 2 %>
Destination Port: <input type="text" id="port_mapping_dest_port"/> <%= spacing 2 %>
<button type="button" class='btn' onclick="add_port_mapping()"><span><span>Add new mapping</span></span></button>
<p/>
<hr/>

<h2>Storage server</h2>
(reload the page to refresh)<br>
<%
def pretty_server_file_list text
  ret = ""

  item_counter = 0
  group_counter = 0

  text.each_line do |line|
    if line.start_with? "ftp://"
      if group_counter > 0
        if item_counter == 0
          ret += "(nothing)"
        end
        ret += "</pre></td></tr></table><br>\n"
      end

      idx = line.index "/", 6
      folder = line[idx..-1].strip
      ret += "Resource in folder: <b>" + folder + "</b><br>\n"
      item_counter = 0
      ret += "<table bgcolor='#EBEBEB' class='code' width='100%'><tr><td><pre>\n"
      group_counter += 1
    else
      splt = line.split
      fn = splt[8]
      size = splt[4].to_i
      next if fn.start_with? "."
      ret += "%-10s%s\n" % [size.to_pretty_file_size, fn]
      item_counter += 1
    end
  end

  if item_counter == 0
    ret += "(nothing)"
  end
  ret += "</pre></td></tr></table>\n"

  return ret
end
%>

<%=

  conf = common_conf
  html_str = ""
  if conf["storage_type"] == "ftp"
    if File.exists? "#{Setting.run_root}/ftp_server_files_list"
      list_data = File.read "#{Setting.run_root}/ftp_server_files_list"
      if list_data =~ /Fatal error: max-retries exceeded/
        html_str = "<b><font color='red'>The storage server is probably down!</font></b>"
      elsif list_data =~ /Not connected/ or list_data =~ /Name or service not known/
        html_str = "<b><font color='red'>Failed to connect to storage server!</font></b>"
      else
        html_str = "<b>Updated at #{File.mtime "#{Setting.run_root}/ftp_server_files_list"}"
        if Time.now - (File.mtime "#{Setting.run_root}/ftp_server_files_list") > 600
          html_str += ", which is a long time ago, <font color='red'>the background file list updater is probably dead!</font>"
        end
        html_str += "</b>"
        html_str += "<br>\n"

        html_str += pretty_server_file_list list_data
      end
    else
      html_str = "The list of server files will be updated later. If you see this message for a long time, the background updating process might be dead."
    end
  elsif conf["storage_type"] == "nfs"
    html_str += "<b>Vdisks</b><br>"
    html_str += "<table bgcolor='#EBEBEB' class='code' width='100%'><tr><td><pre>\n"
    vdisks_list = storage_server_vdisks_list
    if vdisks_list == nil
      html_str += "(nothing)"
    else
      vdisks_list.each do |vd|
        html_str += vd + "\n"
      end
    end
    html_str += "</pre></table><p/>\n"

    html_str += "<b>Software packages</b><br>"
    html_str += "<table bgcolor='#EBEBEB' class='code' width='100%'><tr><td><pre>\n"
    packages_list = storage_server_soft_list
    if packages_list == nil
      html_str += "(nothing)"
    else
      packages_list.each do |pkg|
        html_str += pkg + "\n"
      end
    end
    html_str += "</pre></table>"

  else
    html_str = "<font color='red'>Storage type '#{conf["storage_type"]}' not understood!"
  end
  html_str
%>

<hr/>
<h2>Vdisk images</h2>
<div id="vdisk_images_container"></div>

<p/>
You can register new vdisk images. Make sure you have uploaded vdisk images to storage server first.<br/>
Display name: <input type="text" id='new_vdisk_display' /><%= spacing 4 %> File name: <input type="text" id='new_vdisk_fname' /><%= spacing 4%>
Image type: <select id="new_vdisk_format">
<option>qcow2</option>
<option>iso</option>
<option>img</option>
</select><%= spacing 4%>
OS family: <select id="new_vdisk_os_family">
<option value='windows'>windows</option>
<option value='linux'>linux</option>
<option value='none'>(none)</option>
</select><br/>
OS name: <input type="text" id="new_vdisk_os_name"/> <%=spacing 4%> Description: <input type="text" id="new_vdisk_desc" size=60 /><br/>
<button type="button" class='btn' onclick='register_new_vdisk()'><span><span>Register vdisk</span></span></button>

<hr/>
<h2>Software packages</h2>
<div id="software_packages_container"></div>
<p/>
You can register new software packages. Make sure you have uploaded software packages to storage server first.<br/>
Display name: <input type='text' id="new_soft_display" /> <%= spacing 4 %> File name: <input type='text' id="new_soft_fname" /> <%= spacing 4 %>
OS family: <select id="new_soft_os">
<option value='windows'>windows</option>
<option value='linux'>linux</option>
<option value='none'>(none)</option>
</select><br/>
Description: <input type='text' size=80 id='new_soft_desc'/> <%= spacing 4 %>
<button type='button' class='btn' onclick='register_new_software()'><span><span>Register software</span></span></button>

</center>
<% end %>

