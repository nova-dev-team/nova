# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.

require(File.join(File.dirname(__FILE__), 'config', 'boot'))

require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'

require 'tasks/rails'

require "#{File.dirname __FILE__}/../common/lib/utils.rb"

namespace :nova do
  namespace :master do

    desc "Start Nova master"
    task :start do
      service_port = 3000 # TODO move service_port into common/config
      puts "Starting Nova master on port #{service_port}..."
      my_exec "script/server -d -p #{service_port}"
    end

    desc "Stop Nova server"
    task :stop do
      kill_by_pid_file "#{File.dirname __FILE__}/tmp/pids/server.pid"
      
      my_exec "killall mongrel"
      my_exec "killall swiftiply"
      my_exec "killall swiftiply_mongrel_rails"
      my_exec "killall mongrel_reals"

      Dir.foreach("#{File.dirname __FILE__}/log") do |entry|
        if entry.end_with? ".pid"
          kill_by_pid_file entry
        end
      end

    end

    desc "Initialize system"
    task :init do
      puts "Migrating database..."
      my_exec "rake db:migrate RAILS_ENV=production"
      my_exec "rake db:migrate RAILS_ENV=development"
      my_exec "rake db:migrate:reset RAILS_ENV=production"
      my_exec "rake db:migrate:reset RAILS_ENV=development"
      puts "Loading data..."
      my_exec "rake db:fixtures:load RAILS_ENV=production"
      my_exec "rake db:fixtures:load RAILS_ENV=development"
    end

  end
end

